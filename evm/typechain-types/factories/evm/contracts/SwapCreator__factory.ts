/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapCreator,
  SwapCreatorInterface,
} from "../../../evm/contracts/SwapCreator";

const _abi = [
  {
    inputs: [],
    name: "InvalidClaimer",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidContractAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRelayerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSwapKey",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeout",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTimeToRefund",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySwapClaimer",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySwapOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "TooEarlyToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "TooLateToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "claimKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "refundKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "New",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
    ],
    name: "Ready",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct SwapCreator.Swap",
        name: "_swap",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_secret",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address payable",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address payable",
                name: "claimer",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "claimCommitment",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "refundCommitment",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "timeout1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeout2",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
            ],
            internalType: "struct SwapCreator.Swap",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "relayerHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "swapCreator",
            type: "address",
          },
        ],
        internalType: "struct SwapCreator.RelaySwap",
        name: "_relaySwap",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_secret",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_salt",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "claimRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qKeccak",
        type: "uint256",
      },
    ],
    name: "mulVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_claimCommitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_refundCommitment",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_timeoutDuration1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutDuration2",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "newSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct SwapCreator.Swap",
        name: "_swap",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_secret",
        type: "bytes32",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct SwapCreator.Swap",
        name: "_swap",
        type: "tuple",
      },
    ],
    name: "setReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "swaps",
    outputs: [
      {
        internalType: "enum SwapCreator.Stage",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610d9b908161001c8239f35b600080fdfe608060405260048036101561001357600080fd5b60003560e01c80631e6c5acc146108215780635cb969161461078557806387065c491461046a578063b32d1b4f1461043e578063c41e46cf146101c0578063eb84e7f2146101875763fcaf229c1461006a57600080fd5b3461018257610120908160031936011261018257610087366109ec565b91604051602081019161009a8386610a73565b81526100a5816109cf565b5190209182600052600060205260ff604060002054168281101561016d57801561015c5760031461014c5780516001600160a01b0316330361013c576080015142101561012d57508060005260006020526040600020600260ff198254161790557f5fc23b25552757626e08b316cc2387ad1bc70ee1594af7204db4ce0c39f5d15f600080a2005b6040516332a1860f60e11b8152fd5b5060405163148ca24360e11b8152fd5b5060405163066916a960e01b8152fd5b604051631115766760e01b81528390fd5b602183634e487b7160e01b6000525260246000fd5b600080fd5b5034610182576020366003190112610182578035600052600060205260ff60406000205416604051908281101561016d57602092508152f35b506101009081600319360112610182576001600160a01b03604435818116938335926024359286900361018257606435916084359160a435928184168094036101825760c43594851561042d57846103c4573486036103b3575b871580156103ab575b61039a57891561038a5780158015610382575b6103715761024761024e9142610b78565b9142610b78565b926040519061025c8261099c565b33825260209a8b8301528860408301528760608301526080820192835260a0820194855260c0820195865260e0820196875260e435908201526040516102a58b82018093610a73565b61012081526102b3816109cf565b519020978860005260008a5260ff604060002054168181101561035c5761034d57509160e09593917f91446ce035ac29998b5473504609a5ef5e961005daba4630a1684b63be848f56979593519151925116925193604051958987528a87015260408601526060850152608084015260a083015260c0820152a180600052600082526040600020600160ff19825416179055604051908152f35b6040516339a2986760e11b8152fd5b602182634e487b7160e01b6000525260246000fd5b604051631ffb86f160e21b81528990fd5b508115610236565b6040516208978560e71b81528990fd5b604051631bc61bed60e11b81528990fd5b508615610223565b604051632a9ffab760e21b81528990fd5b346103b3576040516323b872dd60e01b60208201523360248201523060448201526064808201889052815260a0810167ffffffffffffffff811182821017610418576040526104139086610d09565b61021a565b60418b634e487b7160e01b6000525260246000fd5b604051637c946ed760e01b81528990fd5b5034610182576040366003190112610182576104606020916024359035610af8565b6040519015158152f35b50346101825736600319019061024082126101825761018080921261018257604051916080830183811067ffffffffffffffff821117610770576040526104b0366109ec565b808452610124356020850152610144356040850152610164356001600160a01b03811681036101825760608501526101a4356001600160a01b03811690036101825763ffffffff6101c435166101c43503610182576101e4359060ff82168092036101825760405192610527602085018093610a73565b6020860151610140850152604086015161016085015260608601516001600160a01b031681850152835267ffffffffffffffff6101a084019081119084111761073d576101a083600093608093836020970160405282519020838301526101c0820152610204356101e0820152610224356102008201528380520160015afa156106c0576000518251602001516001600160a01b039081169116036107615760608201516001600160a01b0316300361075257604051602081016bffffffffffffffffffffffff196101a43560601b16815263ffffffff60e01b6101c43560e01b16603483015260188252604082019180831067ffffffffffffffff84111761073d5782604052519020604084015103610731578261064a610184358251610bfa565b805160c08101516001600160a01b031690816106de5750506000808080845161068960e060018060a01b03602084015116920151602088015190610ad5565b908282156106d5575bf1156106c057600080806020819401518181156106cc575b6101a4356001600160a01b031690f1156106c057005b6040513d6000823e3d90fd5b506108fc6106aa565b506108fc610692565b61072f929161070d9161070760e060018060a01b03602084015116920151602086015190610ad5565b91610ba8565b805160c00151602090910151906001600160a01b036101a43581169116610ba8565b005b63fe16c3c560e01b8152fd5b604184634e487b7160e01b6000525260246000fd5b60405163a710429d60e01b8152fd5b604051638baa579f60e01b8152fd5b604183634e487b7160e01b6000525260246000fd5b503461018257610140366003190112610182576107a1366109ec565b60208101805191926001600160a01b03928316330361081257506107c86101243584610bfa565b60c08301518216806107fe57506000809360e0829483945116910151908282156107f5575bf1156106c057005b506108fc6107ed565b9160e09061072f9492511691015191610ba8565b604051633471640960e11b8152fd5b5034610182576101403660031901126101825761083d366109ec565b906101243560405160208101906108548286610a73565b6101208152610862816109cf565b5190209081600052600060205260ff60406000205416928084101561098757831561097857600384146109695784516001600160a01b0394908516330361013c5760a086015142109081610947575b5061012d57506108c5606085015182610b85565b817e7c875846b687732a7579c19bb1dade66cd14e9f4f809565e2b2b5e76c72b4f600080a360005260006020526040600020600360ff198254161790558060c083015116801560001461093357506000808360e082959483955116910151908282156107f557f1156106c057005b909160e061072f9382511691015191610ba8565b608087015142119150811561095e575b50386108b1565b600291501438610957565b60405163066916a960e01b8152fd5b604051631115766760e01b8152fd5b602190634e487b7160e01b6000525260246000fd5b610120810190811067ffffffffffffffff8211176109b957604052565b634e487b7160e01b600052604160045260246000fd5b610140810190811067ffffffffffffffff8211176109b957604052565b6101209060031901126101825760405190610a068261099c565b816001600160a01b036004358181168103610182578252602435818116810361018257602083015260443560408301526064356060830152608435608083015260a43560a083015260c43590811681036101825760c082015260e43560e082015261010061010435910152565b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151608084015260a082015160a084015260c08201511660c083015260e081015160e083015261010080910151910152565b91908203918211610ae257565b634e487b7160e01b600052601160045260246000fd5b60207f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f8179860806040516000948593848352601b8684015280604084015270014551231950b75fc4402da1732fc9bebe199109606082015282805260015afa15610b6c57516001600160a01b0391821691161490565b604051903d90823e3d90fd5b91908201809211610ae257565b90610b8f91610af8565b15610b9657565b60405163abab6bd760e01b8152600490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff8311828410176109b957610bf892604052610d09565b565b60409182516020810190610c0e8285610a73565b6101208152610c1c816109cf565b519020906000928284528360205260ff858520541660049081811015610cf6578015610ce75760038114610cd857608083015142109081610ccc575b50610cbe5760a0820151421015610cb0575084610c7791015182610b85565b817f38d6042dbdae8e73a7f6afbabd3fbe0873f9f5ed3cd71294591c3908c2e65fee8480a381528060205220600360ff19825416179055565b855163497df9d160e01b8152fd5b855163d71d60b560e01b8152fd5b60029150141538610c58565b50855163066916a960e01b8152fd5b508551631115766760e01b8152fd5b634e487b7160e01b865260218252602486fd5b906000602091828151910182855af1156106c0576000513d610d5c57506001600160a01b0381163b155b610d3a5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610d3356fea2646970667358221220d38c535ca07ab118e803593eb792c570692d0b4c9889920c7379bb4ade327ceb64736f6c63430008170033";

type SwapCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapCreator__factory extends ContractFactory {
  constructor(...args: SwapCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapCreator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapCreator__factory {
    return super.connect(runner) as SwapCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapCreatorInterface {
    return new Interface(_abi) as SwapCreatorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapCreator {
    return new Contract(address, _abi, runner) as unknown as SwapCreator;
  }
}
