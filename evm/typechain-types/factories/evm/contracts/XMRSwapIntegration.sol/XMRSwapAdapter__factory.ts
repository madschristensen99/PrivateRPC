/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  XMRSwapAdapter,
  XMRSwapAdapterInterface,
} from "../../../../evm/contracts/XMRSwapIntegration.sol/XMRSwapAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapCreator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "SwapClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
    ],
    name: "SwapCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
    ],
    name: "SwapReady",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "swapID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "SwapRefunded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapCreator.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "claimSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "claimCommitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "refundCommitment",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeoutDuration1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutDuration2",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "createSwap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
    ],
    name: "getSwapStatus",
    outputs: [
      {
        internalType: "enum ISwapCreator.Stage",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hashlockToSwapID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapCreator.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "refundSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "claimCommitment",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "refundCommitment",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timeout1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeout2",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapCreator.Swap",
        name: "swap",
        type: "tuple",
      },
    ],
    name: "setSwapReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapCreator",
    outputs: [
      {
        internalType: "contract ISwapCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "swapIDToHashlock",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461009557601f610a7f38819003918201601f19168301916001600160401b0383118484101761009a5780849260209460405283398101031261009557516001600160a01b03811690819003610095576080526040516109ce90816100b1823960805181818160d0015281816101b6015281816102a001528181610402015281816105270152818161061b015261074c0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80634c000575146107065780634dc92eb5146105f05780635a33de411461037057806384c50c421461034a57806399dbc952146101e9578063bb08e673146101a1578063d093b23f146100a35763ec5dd0171461007957600080fd5b3461009f57602036600319011261009f5760209282913581526001845220549051908152f35b8280fd5b503461009f57826100b336610856565b949192908382528160205282822054946100ce8615156108f9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561019d57610144849283610123958851968795869463079b16b360e21b8652850190610936565b8b6101248401525af180156101935761017b575b505051908152602081019190915260408101919091527fdf180bd07f7fb909fbc0f8f19073627de0dd9f5ded1682293de36dd023d370c59080606081015b0390a180f35b610184906107ed565b61018f578438610137565b8480fd5b83513d84823e3d90fd5b8380fd5b5050346101e557816003193601126101e557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50903461009f5761014036600319011261009f57813561012036602319011261034557815161021781610817565b6001600160a01b03936024358581168103610345578252604435858116810361034557602083015260643584830152608435606083015260a435608083015260c43560a083015260e43591858316830361034557869260c08201526101043560e082015261012490813561010082015284845283602052858420549661029e8815156108f9565b7f00000000000000000000000000000000000000000000000000000000000000001691823b1561018f576102e89385809489519687958694633f2bc8a760e21b8652850190610936565b5af1801561033b57610327575b50507f508595fccc7c58f47c32ef50ef439ea8be32419020250fbd0e5f9c61ad57ee509282519182526020820152a180f35b610330906107ed565b61019d5783386102f5565b84513d84823e3d90fd5b600080fd5b503461009f57602036600319011261009f57602092829135815280845220549051908152f35b5091906101203660031901126101e55782356024926064359460018060a01b03908187168097036103455760c4358281168091036103455760e43561010491806104b9575b8751998a998a9563c41e46cf60e01b8752813590870152604435908601526044850152608435606485015260a435608485015260a484015260c4830152803560e4830152602097889334907f0000000000000000000000000000000000000000000000000000000000000000165af19384156104ad57819461047e575b50818084837fa717f5a313e9ffe2ba46acd99b120c4fd3f0b96ff024ba5acb99d892a924121395829552808952878282205587815260018952205581519081528486820152a151908152f35b9093508481813d83116104a6575b6104968183610834565b8101031261019d57519281610432565b503d61048c565b508251903d90823e3d90fd5b87516323b872dd60e01b6020808301918252338c840152306044840152606480840186905283529160a0810167ffffffffffffffff8111828210176105dc578b5251829189919082865af1156105d25786513d6105c95750813b155b6105b357885163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000008716868201528a81018490529080826044818b875af180156105a95761056e575b50506103b5565b81813d83116105a2575b6105828183610834565b8101031261059e57518015150361059a573880610567565b8580fd5b8680fd5b503d610578565b8a513d8a823e3d90fd5b8851635274afe760e01b81528086018390528a90fd5b60011415610515565b88513d88823e3d90fd5b8c604189634e487b7160e01b600052526000fd5b508290346101e55761060136610856565b908285528460205285852054936106198515156108f9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561059e579161014487928361066e958b519687958694632e5cb48b60e11b8652850190610936565b876101248401525af180156106fc576106c5575b50610175907f601882b5cb6bac9ff9d2573b352c4a9d25e7604a97f2cf054be7c13826cee16d949551938493846040919493926060820195825260208201520152565b907f601882b5cb6bac9ff9d2573b352c4a9d25e7604a97f2cf054be7c13826cee16d946106f4610175936107ed565b945090610682565b86513d87823e3d90fd5b50903461009f57602092836003193601126107ea578235815280845281812054916107328315156108f9565b80516375c273f960e11b81528481019390935284836024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156107df5782936107a8575b505192808310156107955750508152f35b634e487b7160e01b825260219052602490fd5b9092508481813d83116107d8575b6107c08183610834565b810103126101e55751838110156101e5579138610784565b503d6107b6565b5051903d90823e3d90fd5b80fd5b67ffffffffffffffff811161080157604052565b634e487b7160e01b600052604160045260246000fd5b610120810190811067ffffffffffffffff82111761080157604052565b90601f8019910116810190811067ffffffffffffffff82111761080157604052565b90610160600319830112610345576004359161012060009160231901126107ea576040519061088482610817565b6001600160a01b039060243582811681036101e557835260443582811681036101e55760208401526064356040840152608435606084015260a435608084015260c43560a084015260e43591821682036107ea575060c08201526101043560e082015261012435610100820152906101443590565b1561090057565b60405162461bcd60e51b815260206004820152600e60248201526d14ddd85c081b9bdd08199bdd5b9960921b6044820152606490fd5b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151608084015260a082015160a084015260c08201511660c083015260e081015160e08301526101008091015191015256fea2646970667358221220088f0ff396548c36a37245374763b9c29f18524e0c293ef8e2e79545afe1f4ee64736f6c63430008170033";

type XMRSwapAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XMRSwapAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XMRSwapAdapter__factory extends ContractFactory {
  constructor(...args: XMRSwapAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _swapCreator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_swapCreator, overrides || {});
  }
  override deploy(
    _swapCreator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_swapCreator, overrides || {}) as Promise<
      XMRSwapAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): XMRSwapAdapter__factory {
    return super.connect(runner) as XMRSwapAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XMRSwapAdapterInterface {
    return new Interface(_abi) as XMRSwapAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): XMRSwapAdapter {
    return new Contract(address, _abi, runner) as unknown as XMRSwapAdapter;
  }
}
