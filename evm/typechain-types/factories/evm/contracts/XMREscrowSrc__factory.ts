/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  XMREscrowSrc,
  XMREscrowSrcInterface,
} from "../../../evm/contracts/XMREscrowSrc";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rescueDelay",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapAdapter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidImmutables",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenSendingFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "EscrowWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRescued",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_BYTECODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESCUE_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "claimCommitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "refundCommitment",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "publicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAdapter",
    outputs: [
      {
        internalType: "contract XMRSwapAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type XMREscrowSrcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XMREscrowSrcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XMREscrowSrc__factory extends ContractFactory {
  constructor(...args: XMREscrowSrcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    _swapAdapter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      _swapAdapter,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    _swapAdapter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      rescueDelay,
      accessToken,
      _swapAdapter,
      overrides || {}
    ) as Promise<
      XMREscrowSrc & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): XMREscrowSrc__factory {
    return super.connect(runner) as XMREscrowSrc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XMREscrowSrcInterface {
    return new Interface(_abi) as XMREscrowSrcInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): XMREscrowSrc {
    return new Contract(address, _abi, runner) as unknown as XMREscrowSrc;
  }
}
