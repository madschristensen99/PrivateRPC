/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EscrowFactory,
  EscrowFactoryInterface,
} from "../../../evm/contracts/EscrowFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_creationFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPartialFill",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecretsAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "CreationFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "creatorType",
        type: "uint8",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "dstImmutables",
        type: "tuple",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProxyDstBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e03461021d576001600160401b0390601f61166a38819003918201601f1916830192919084841183851017610222578160a0928492604096875283398101031261021d5780516001600160a01b03929083811680820361021d5761006660208501610238565b90838501519163ffffffff831680930361021d578661008c608060608901519801610238565b911690811561020557600080546001600160a01b03198082168517835588519299929790948b94939285167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08c80a360c052600155169060025416176002556109d79182840192848410898511176101f157918593918593610c9385398252602082015203019083f09283156101e657831660805280517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208201908152606094851b6001600160601b03191660348301526e5af43d82803e903d91602b57fd5bf360881b604883015260378252938101949092908511838610176101d2575083905251902060a052610a46908161024d82396080518181816102740152610540015260a051818181610218015261030f015260c05181818161076e01526108fc0152f35b634e487b7160e01b81526041600452602490fd5b5051903d90823e3d90fd5b634e487b7160e01b87526041600452602487fd5b8551631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361021d5756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c9081633eb5002a1461075a575080634579d04b146104af578063551512de146103dd57806361d027b3146103b4578063715018a61461035a5780638da5cb5b146103325780639a46a225146102f7578063b7d86225146102a3578063ba5511771461025f578063be58e91c146101d8578063dce0b4e4146101b9578063f0f44260146101425763f2fde38b03610011573461013e57602036600319011261013e576100d261079d565b906100db610988565b6001600160a01b0391821692831561012857505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101b55760203660031901126101b5577f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a9061017f61079d565b610187610988565b600280546001600160a01b039283166001600160a01b0319821681179092558351921682526020820152a180f35b5080fd5b5050346101b557816003193601126101b5576020906001549051908152f35b5050346101b557610100918260031936011261025c5750600b6020926101fd36610813565b4260e01b60018060e01b0360e435161760e0820152208251907f000000000000000000000000000000000000000000000000000000000000000084830152848201523081520160ff81536055902090516001600160a01b039091168152f35b80fd5b5050346101b557816003193601126101b557517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461013e57602036600319011261013e577f5de302eeb1c80d4fb0c0953b692353f09ddf431411b8eb2034d5e8576956191291356102e1610988565b600154908060015582519182526020820152a180f35b5050346101b557816003193601126101b557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101b557816003193601126101b557905490516001600160a01b039091168152602090f35b833461025c578060031936011261025c57610373610988565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101b557816003193601126101b55760025490516001600160a01b039091168152602090f35b50903461013e57606036600319011261013e576103f861079d565b60243590604435906001600160a01b03808316918284036104ab5761041b610988565b168061044b5750508480809381935af161043361087e565b501561043e57505080f35b51634033e4e360e01b8152fd5b929093809250959495519363a9059cbb60e01b60208601526024850152604484015260448352608083019083821067ffffffffffffffff83111761049857610495949550526109b4565b80f35b634e487b7160e01b855260418652602485fd5b8780fd5b50906101009182600319360112610756576001600160a01b03608435811680159490851561074d576104e560c43560a4356107b8565b915b6104f3600154846107b8565b340361073d5761050236610813565b60e081810180516001600160e01b03164290921b919091179052208551733d602d80600a3d3981f3363d3d373d3d3d363d7360601b602082019081527f0000000000000000000000000000000000000000000000000000000000000000606090811b6bffffffffffffffffffffffff191660348401526e5af43d82803e903d91602b57fd5bf360881b60488401526037835267ffffffffffffffff95929081018681118282101761072a57808a528347106107105750805115610700575191f53d15198115166106f65783169586156106e657908793929115610682575b50506001549081151580610675575b610646575b828660ff87610602336108be565b9080519384526024356020850152606435908401521660608201527f530d4b707610e0ade6ce45860d8012251fc38e78c1ec43cd4def820ffaec8ac860803392a280f35b8280928192600254165af161065961087e565b5015610667578381806105f4565b9051634033e4e360e01b8152fd5b50806002541615156105ef565b909192508451916323b872dd60e01b602084015233602484015286604484015260a43560648401526064835260a0830190838210908211176106d35785528692916106cc916109b4565b38806105e0565b634e487b7160e01b885260418552602488fd5b855163b06ebf3d60e01b81528590fd5b85513d89823e3d90fd5b8851631328927760e21b81528890fd5b8360846044934763cf47918160e01b855260648201520152fd5b634e487b7160e01b8c526041895260248cfd5b85516334f5151d60e01b81528590fd5b60c435916104e7565b8380fd5b8490346101b557816003193601126101b5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160a01b03821682036107b357565b600080fd5b919082018092116107c557565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107fd57604052565b634e487b7160e01b600052604160045260246000fd5b90610100809260031901126107b35760405191820182811067ffffffffffffffff8211176107fd57604052816004358152602435602082015260443560408201526064356060820152608435608082015260a43560a082015260c43560c082015260e060e435910152565b3d156108b9573d9067ffffffffffffffff82116107fd57604051916108ad601f8201601f1916602001846107db565b82523d6000602084013e565b606090565b6001600160a01b0390811660443582168114610981578160643516811461097a576020906024604051809481936370a0823160e01b835260048301527f0000000000000000000000000000000000000000000000000000000000000000165afa90811561096e5760009161093c575b5061093757600390565b600090565b90506020813d602011610966575b81610957602093836107db565b810103126107b357513861092d565b3d915061094a565b6040513d6000823e3d90fd5b5050600290565b5050600190565b6000546001600160a01b0316330361099c57565b60405163118cdaa760e01b8152336004820152602490fd5b906000602091828151910182855af11561096e576000513d610a0757506001600160a01b0381163b155b6109e55750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156109de56fea264697066735822122028cd0ffb43b0047feaba9bf7bda3ab1a7cd72f7bb8f7dc8133c0c273ef41a09a64736f6c634300081700336101003461014f576001600160401b0390601f6109d738819003918201601f19168301918483118484101761013957808492604094855283398101031261014f5780519063ffffffff821680920361014f5760200151906001600160a01b038216820361014f573360c05260a05260805260405160208101907f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000082523060601b60348201526e5af43d82803e903d91602b57fd5bf360881b604882015260378152606081019281841090841117610139578260405251902060e052610882908161015582396080518161045e015260a05181818160970152610298015260c051818181610126015281816102620152818161039d01526105c4015260e05181818160fc015281816102380152818161036401526105980152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b60009260e08435811c9283630af97558146104325750826323305703146103cc5782632dd310001461038757826334862b6a1461034b5782634649088b146101dd5750816390d3252f146100be575063f56cd69c146100815780610012565b346100ba57816003193601126100ba57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100ba57610100806003193601126101d9576001600160a01b0391606435831691338390036101c9576055600b85928451818a8237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036101ba5761015f60e4356106fe565b42106101ab5750906101789160a435916084351661072e565b61018460c435336107d6565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b516337bf561360e11b81528490fd5b51635134a42560e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b8280fd5b90849250346101d9576101403660031901126101d9576001600160a01b0391813591908383168303610347576024359361010080604319360112610343578160a43516330361033357600b60559189518160448237208951907f00000000000000000000000000000000000000000000000000000000000000008b83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036103245761012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061031657506103107fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac93946102f084338561072e565b516001600160a01b03909216825260208201929092529081906040820190565b0390a180f35b84516337bf561360e11b8152fd5b508451635134a42560e11b8152fd5b87516348f5c3ed60e01b81528490fd5b8680fd5b8480fd5b505050346100ba57816003193601126100ba57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100ba57816003193601126100ba57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838591346101d9576103dd3661050b565b92909160608401356001600160a01b031633036101c95763ffffffff8185013580921c9116810180911161041f5742106101ab57509061041c9161056b565b80f35b634e487b7160e01b855260118652602485fd5b9085918534610507576104443661050b565b6370a0823160e01b845233878501529390926020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104fd5786916104c7575b50156101c95763ffffffff8185013580921c9160201c16810180911161041f5742106101ab57509061041c9161056b565b90506020813d6020116104f5575b816104e260209383610533565b810103126104f1575187610496565b8580fd5b3d91506104d5565b83513d88823e3d90fd5b8380fd5b9061012060031983011261052e5761010060043592602319011261052e57602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761055557604052565b634e487b7160e01b600052604160045260246000fd5b919061057a60e08201356106fe565b4210156106ec576040928351610100908184823720916055600b86517f000000000000000000000000000000000000000000000000000000000000000088820152602095868201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153206001600160a01b0390811630036106db57855183858201528481528681019080821067ffffffffffffffff831117610555579080869189528251926000935b8085106106c45760009394508101838b820152039060025afa156106b95760005184830135036106a85760c0826106996106a19360a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105999a960135908087850135169060808501351661072e565b0135336107d6565b51908152a1565b855163abab6bd760e01b8152600490fd5b85513d6000823e3d90fd5b81850180850151908c01529290930192879261062a565b8551635134a42560e11b8152600490fd5b6040516337bf561360e11b8152600490fd5b63ffffffff8160e01c9160401c1681018091116107185790565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b031691908261074a5761074892506107d6565b565b60405163a9059cbb60e01b60208083019182526001600160a01b03939093166024830152604480830194909452928152909160009161078a606482610533565b519082855af1156107ca576000513d6107c15750803b155b6107a95750565b60249060405190635274afe760e01b82526004820152fd5b600114156107a2565b6040513d6000823e3d90fd5b60008080809481945af1903d15610846573d9067ffffffffffffffff82116108325760405191610810601f8201601f191660200184610533565b825260203d92013e5b1561082057565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b5061081956fea2646970667358221220efdaf77f6151dfe3167c9b183395bab4b359f732974bb41bd29b4c8437ab503664736f6c63430008170033";

type EscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowFactory__factory extends ContractFactory {
  constructor(...args: EscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      accessToken,
      owner,
      rescueDelayDst,
      _creationFee,
      _treasury,
      overrides || {}
    );
  }
  override deploy(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      accessToken,
      owner,
      rescueDelayDst,
      _creationFee,
      _treasury,
      overrides || {}
    ) as Promise<
      EscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowFactory__factory {
    return super.connect(runner) as EscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFactoryInterface {
    return new Interface(_abi) as EscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowFactory {
    return new Contract(address, _abi, runner) as unknown as EscrowFactory;
  }
}
