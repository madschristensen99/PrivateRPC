/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Secp256k1,
  Secp256k1Interface,
} from "../../../evm/contracts/Secp256k1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "scalar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "qKeccak",
        type: "uint256",
      },
    ],
    name: "mulVerify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100155760fd908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c63b32d1b4f14602857600080fd5b3460c35781604036600319011260c05760806020927f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798838252601b8583015280604083015270014551231950b75fc4402da1732fc9bebe199060043509606082015282805260015afa1560b457516040516024356001600160a01b039081169216919091148152602090f35b604051903d90823e3d90fd5b80fd5b5080fdfea26469706673582212204631854dec3ad242c74d1de51a1a4ac88f66f96c171d222491610e6b31493c6064736f6c63430008170033";

type Secp256k1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Secp256k1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Secp256k1__factory extends ContractFactory {
  constructor(...args: Secp256k1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Secp256k1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Secp256k1__factory {
    return super.connect(runner) as Secp256k1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Secp256k1Interface {
    return new Interface(_abi) as Secp256k1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Secp256k1 {
    return new Contract(address, _abi, runner) as unknown as Secp256k1;
  }
}
