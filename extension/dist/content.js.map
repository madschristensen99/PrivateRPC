{
  "version": 3,
  "sources": ["../src/content.ts"],
  "sourcesContent": ["// Inject script file to avoid CSP issues\nconst script = document.createElement('script');\nscript.src = chrome.runtime.getURL('inject.js');\nscript.onload = function() {\n  script.remove();\n};\n\n// Inject before page loads\n(document.head || document.documentElement).appendChild(script);\n\n// Handle messages from the page\nwindow.addEventListener('message', async (event) => {\n  if (event.data.type === 'FROM_PAGE') {\n    const { method, params, id } = event.data;\n    \n    try {\n      let result;\n      \n      if (method === 'eth_requestAccounts') {\n        result = await chrome.runtime.sendMessage({ type: 'connect' });\n        result = result ? [result] : [];\n      } else if (method === 'eth_accounts') {\n        result = await chrome.runtime.sendMessage({ type: 'getAccounts' });\n        result = result ? [result] : [];\n      } else if (method === 'eth_chainId') {\n        result = await chrome.runtime.sendMessage({ type: 'getChainId' });\n      } else if (method === 'net_version') {\n        result = await chrome.runtime.sendMessage({ type: 'getNetworkVersion' });\n      } else if (method === 'personal_sign') {\n        const [message, address] = params || [];\n        result = await chrome.runtime.sendMessage({ \n          type: 'personalSign', \n          message, \n          address \n        });\n      } else if (method === 'eth_sendTransaction') {\n        const [txParams] = params || [];\n        console.log('\uD83D\uDCE8 eth_sendTransaction called from dApp:', txParams);\n        console.log('\u23F0 Timestamp:', new Date().toISOString());\n        \n        result = await chrome.runtime.sendMessage({ \n          type: 'sendTransaction', \n          txParams \n        });\n        \n        console.log('\uD83D\uDCEC Background response:', result);\n        if (result && typeof result === 'string' && result.startsWith('0x')) {\n          console.log('\uD83D\uDD17 Transaction hash received:', result);\n          console.log('\uD83D\uDD0D View on Etherscan:', `https://sepolia.etherscan.io/tx/${result}`);\n        }\n      } else if (method === 'wallet_switchEthereumChain') {\n        const [{ chainId }] = params || [{}];\n        console.log('Switching to chain:', chainId);\n        result = await chrome.runtime.sendMessage({ \n          type: 'switchChain', \n          chainId \n        });\n      } else if (method === 'eth_getBalance') {\n        const [address, blockTag] = params || [];\n        console.log('\uD83D\uDCB0 eth_getBalance requested for:', address, 'at block:', blockTag);\n        \n        // Get dynamic balance from background script\n        result = await chrome.runtime.sendMessage({ \n          type: 'getBalance', \n          address,\n          blockTag\n        });\n      } else if (method === 'wallet_addEthereumChain') {\n        // Accept add chain requests\n        result = null;\n      } else if (method === 'wallet_requestPermissions') {\n        // Grant all requested permissions\n        result = [{ parentCapability: 'eth_accounts' }];\n      } else if (method === 'wallet_getPermissions') {\n        // Return granted permissions\n        result = [{ parentCapability: 'eth_accounts' }];\n      } else if (method === 'eth_blockNumber') {\n        // Return fake block number\n        result = '0x1234567';\n      } else if (method === 'eth_gasPrice') {\n        // Return reasonable gas price (let dApp decide)\n        result = '0x2540be400'; // 10 gwei\n      } else if (method === 'eth_estimateGas') {\n        // Return higher gas estimate for contract calls\n        const [txParams] = params || [];\n        const hasData = txParams?.data && txParams.data !== '0x';\n        result = hasData ? '0x30d40' : '0x5208'; // 200k for contracts, 21k for transfers\n      } else if (method === 'eth_getTransactionCount') {\n        // Return fake nonce\n        result = '0x1';\n      } else if (method === 'eth_getCode') {\n        // Return empty code for all addresses (no contracts)\n        result = '0x';\n      } else {\n        console.log('Unsupported method called:', method, params);\n        throw new Error('Unsupported method: ' + method);\n      }\n      \n      window.postMessage({\n        type: 'FROM_CONTENT',\n        method,\n        result,\n        id\n      }, '*');\n    } catch (error) {\n      window.postMessage({\n        type: 'FROM_CONTENT',\n        method,\n        error: error instanceof Error ? error.message : String(error),\n        id\n      }, '*');\n    }\n  }\n});"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,MAAM,OAAO,QAAQ,OAAO,WAAW;AAC9C,aAAO,SAAS,WAAW;AACzB,eAAO,OAAO;AAAA,MAChB;AAGA,OAAC,SAAS,QAAQ,SAAS,iBAAiB,YAAY,MAAM;AAG9D,aAAO,iBAAiB,WAAW,OAAO,UAAU;AAClD,YAAI,MAAM,KAAK,SAAS,aAAa;AACnC,gBAAM,EAAE,QAAQ,QAAQ,GAAG,IAAI,MAAM;AAErC,cAAI;AACF,gBAAI;AAEJ,gBAAI,WAAW,uBAAuB;AACpC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,UAAU,CAAC;AAC7D,uBAAS,SAAS,CAAC,MAAM,IAAI,CAAC;AAAA,YAChC,WAAW,WAAW,gBAAgB;AACpC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,cAAc,CAAC;AACjE,uBAAS,SAAS,CAAC,MAAM,IAAI,CAAC;AAAA,YAChC,WAAW,WAAW,eAAe;AACnC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,aAAa,CAAC;AAAA,YAClE,WAAW,WAAW,eAAe;AACnC,uBAAS,MAAM,OAAO,QAAQ,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAAA,YACzE,WAAW,WAAW,iBAAiB;AACrC,oBAAM,CAAC,SAAS,OAAO,IAAI,UAAU,CAAC;AACtC,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH,WAAW,WAAW,uBAAuB;AAC3C,oBAAM,CAAC,QAAQ,IAAI,UAAU,CAAC;AAC9B,sBAAQ,IAAI,mDAA4C,QAAQ;AAChE,sBAAQ,IAAI,sBAAgB,oBAAI,KAAK,GAAE,YAAY,CAAC;AAEpD,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAED,sBAAQ,IAAI,kCAA2B,MAAM;AAC7C,kBAAI,UAAU,OAAO,WAAW,YAAY,OAAO,WAAW,IAAI,GAAG;AACnE,wBAAQ,IAAI,wCAAiC,MAAM;AACnD,wBAAQ,IAAI,gCAAyB,mCAAmC,MAAM,EAAE;AAAA,cAClF;AAAA,YACF,WAAW,WAAW,8BAA8B;AAClD,oBAAM,CAAC,EAAE,QAAQ,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;AACnC,sBAAQ,IAAI,uBAAuB,OAAO;AAC1C,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAAA,YACH,WAAW,WAAW,kBAAkB;AACtC,oBAAM,CAAC,SAAS,QAAQ,IAAI,UAAU,CAAC;AACvC,sBAAQ,IAAI,2CAAoC,SAAS,aAAa,QAAQ;AAG9E,uBAAS,MAAM,OAAO,QAAQ,YAAY;AAAA,gBACxC,MAAM;AAAA,gBACN;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH,WAAW,WAAW,2BAA2B;AAE/C,uBAAS;AAAA,YACX,WAAW,WAAW,6BAA6B;AAEjD,uBAAS,CAAC,EAAE,kBAAkB,eAAe,CAAC;AAAA,YAChD,WAAW,WAAW,yBAAyB;AAE7C,uBAAS,CAAC,EAAE,kBAAkB,eAAe,CAAC;AAAA,YAChD,WAAW,WAAW,mBAAmB;AAEvC,uBAAS;AAAA,YACX,WAAW,WAAW,gBAAgB;AAEpC,uBAAS;AAAA,YACX,WAAW,WAAW,mBAAmB;AAEvC,oBAAM,CAAC,QAAQ,IAAI,UAAU,CAAC;AAC9B,oBAAM,UAAU,UAAU,QAAQ,SAAS,SAAS;AACpD,uBAAS,UAAU,YAAY;AAAA,YACjC,WAAW,WAAW,2BAA2B;AAE/C,uBAAS;AAAA,YACX,WAAW,WAAW,eAAe;AAEnC,uBAAS;AAAA,YACX,OAAO;AACL,sBAAQ,IAAI,8BAA8B,QAAQ,MAAM;AACxD,oBAAM,IAAI,MAAM,yBAAyB,MAAM;AAAA,YACjD;AAEA,mBAAO,YAAY;AAAA,cACjB,MAAM;AAAA,cACN;AAAA,cACA;AAAA,cACA;AAAA,YACF,GAAG,GAAG;AAAA,UACR,SAAS,OAAO;AACd,mBAAO,YAAY;AAAA,cACjB,MAAM;AAAA,cACN;AAAA,cACA,OAAO,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AAAA,cAC5D;AAAA,YACF,GAAG,GAAG;AAAA,UACR;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA;",
  "names": []
}
